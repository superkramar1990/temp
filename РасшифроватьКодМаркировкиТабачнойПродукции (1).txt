Функция РасшифроватьКодМаркировкиТабачнойПродукции(Знач КодМаркировки) Экспорт
	
	СимволGS1ОкончанияСтрокиПеременнойДлины = Символ(29);
	ИдентификаторGTIN = "01";
	ИдентификаторСерийныйНомер = "21";
	ИдентификаторКлючаПроверки = "91";
	ИдентификаторКодаПроверки  = "92";
	ИдентификаторМРЦ  = "8005";
	ИдентификаторКодПроверкиНовый  = "93";
	ИдентификаторДопИдентификатор = "240";
	
	ДанныеМаркировки = Новый Структура();
	ДанныеМаркировки.Вставить("Расшифрован", Ложь);
	ДанныеМаркировки.Вставить("ТипКодаМаркировки"); // Тип кода маркировки определяемая по исходному коду маркировки - "Потребительская", "Групповая". 
	ДанныеМаркировки.Вставить("ГлобальныйИдентификаторТорговойЕдиницы"); // GTIN
	ДанныеМаркировки.Вставить("СерийныйНомер"); // Серийный номер с потребительской или групповой обработки.
	ДанныеМаркировки.Вставить("ИдентификаторКлючаПроверки");
	ДанныеМаркировки.Вставить("КодПроверки");
	ДанныеМаркировки.Вставить("ДополнительныйИдентификаторПродукта");
	ДанныеМаркировки.Вставить("КодМаркировки"); // Исходный код маркировки.
	ДанныеМаркировки.Вставить("ШтрихКод");      // Штрихкод товара преобразованный из GTIN
	ДанныеМаркировки.Вставить("МРЦ", -1);       // Штрихкод товара преобразованный из GTIN
	ДанныеМаркировки.Вставить("ЕстьМРЦ", Неопределено);
	ДанныеМаркировки.Вставить("НестандартнаяДлинаКода", Ложь);

	КодМаркировки = СтрЗаменить(КодМаркировки, СимволGS1ОкончанияСтрокиПеременнойДлины, ""); // В строке присутствуют спецсимволы разделители групп GS (Dec 29).
	ДанныеМаркировки.КодМаркировки = КодМаркировки;
	
	ДлиннаКода = СтрДлина(КодМаркировки);
	
	// Конвертация кода в формат {GTIN + SERIAL + ..} из {01 + GTIN + 21 + SERIAL}, {(01) + GTIN + (21) + SERIAL}
	Если ДлиннаКода = 31 И Лев(КодМаркировки, 2) = "01" И Сред(КодМаркировки, 17, 2) = "21" Тогда
		КодМаркировки = Сред(КодМаркировки, 3);
		КодМаркировки = Лев(КодМаркировки, 14) + Сред(КодМаркировки, 17);
		КодМаркировки = КодМаркировки + "**";
		
	ИначеЕсли ДлиннаКода = 35 И Лев(КодМаркировки, 4) = "(01)" И Сред(КодМаркировки, 19, 4) = "(21)" Тогда
		КодМаркировки = Сред(КодМаркировки, 5);
		КодМаркировки = Лев(КодМаркировки, 14) + Сред(КодМаркировки, 19);
		КодМаркировки = КодМаркировки + "**";
	
	КонецЕсли;
	
	// Молочная продукция. Приводим код к стандартной длине 30 символов, удаляя скобки
	Если ДлиннаКода = 36 И Лев(КодМаркировки, 4) = "(01)" И Сред(КодМаркировки, 19, 4) = "(21)" Тогда
		КодМаркировки = СтрЗаменить(КодМаркировки, "(01)", "01");
		КодМаркировки = СтрЗаменить(КодМаркировки, "(21)", "21");
		КодМаркировки = СтрЗаменить(КодМаркировки, "(93)", "93");
	КонецЕсли;
	
	ДлиннаКода = СтрДлина(КодМаркировки);
	
	// Строка, полученная со сканера штрихкода в режиме эмуляции клавиатуры. Не содержит разделителей групп GS (Dec 29)
	// Исходим из того что все группы имеют фиксированную ширину и порядок описанный в спецификации.
	Если ДлиннаКода = 41 И Лев(КодМаркировки, 4) = "(01)" И Сред(КодМаркировки, 19, 4) = "(13)" И Сред(КодМаркировки, 29, 4) = "(21)" Тогда  // Код короба в формате (01)14gtin(13)6YYMMDD(21)9Serial
		ДанныеМаркировки.ТипКодаМаркировки = "Групповая";
		ДанныеМаркировки.ГлобальныйИдентификаторТорговойЕдиницы = Сред(КодМаркировки, 5, 14);
		ДанныеМаркировки.СерийныйНомер = Прав(КодМаркировки, 9);
		ДанныеМаркировки.КодПроверки = "";
		ДанныеМаркировки.Расшифрован = Истина;
	ИначеЕсли ДлиннаКода = 35 И Лев(КодМаркировки, 2) = "01" И Сред(КодМаркировки, 17, 2) = "13" И Сред(КодМаркировки, 25, 2) = "21" Тогда // Код короба в формате 01<14gtin>13<6YYMMDD>21<9Serial>
		ДанныеМаркировки.ТипКодаМаркировки = "Групповая";
		ДанныеМаркировки.ГлобальныйИдентификаторТорговойЕдиницы = Сред(КодМаркировки, 3, 14);
		ДанныеМаркировки.СерийныйНомер = Прав(КодМаркировки, 9);
		ДанныеМаркировки.КодПроверки = "";
		ДанныеМаркировки.Расшифрован = Истина;
	ИначеЕсли ДлиннаКода = 29 Тогда // Код маркировки потребительской упаковки изложенные в постановлении правительстве №1433 от 27 ноября 2017.
		
		ДанныеМаркировки.ТипКодаМаркировки = "Потребительская";
		ДанныеМаркировки.ГлобальныйИдентификаторТорговойЕдиницы = Лев(КодМаркировки, 14); // Код товара по товарной номенклатуре GS1.
		ДанныеМаркировки.СерийныйНомер = Сред(КодМаркировки, 15, 7); // Код идентификации упаковки табачной продукции.
		ДанныеМаркировки.КодПроверки = Прав(КодМаркировки, 8); // Код проверки.
		ДанныеМаркировки.Расшифрован = Истина;
		//+БПО3.2
		МРЦ = Лев(ДанныеМаркировки.КодПроверки,4);
		ДанныеМаркировки.МРЦ = ПолучитьМРЦ(МРЦ);
		Если ДанныеМаркировки.МРЦ > 0 Тогда
			ДанныеМаркировки.СерийныйНомер = ДанныеМаркировки.СерийныйНомер + МРЦ;
		КонецЕсли;
		//-БПО3.2
		
	ИначеЕсли ДлиннаКода = 31 Тогда // Код маркировки потребительской упаковки, новые требования.
		
		ДанныеМаркировки.ТипКодаМаркировки = "Потребительская";
		ДанныеМаркировки.ГлобальныйИдентификаторТорговойЕдиницы = Лев(КодМаркировки, 14); // Код товара по товарной номенклатуре GS1.
		ДанныеМаркировки.СерийныйНомер = Сред(КодМаркировки, 15, 7); // Код идентификации упаковки табачной продукции.
		КодПроверки = Прав(КодМаркировки, 10); 
		ДанныеМаркировки.ИдентификаторКлючаПроверки = Лев(КодПроверки, 2); // Идентификатор ключа проверки.
		ДанныеМаркировки.КодПроверки = Прав(КодПроверки, 8); // Код проверки.
		ДанныеМаркировки.Расшифрован = Истина;
		ДанныеМаркировки.МРЦ = ПолучитьМРЦ(Лев(ДанныеМаркировки.КодПроверки,4));
	ИначеЕсли ДлиннаКода = 52 ИЛИ ДлиннаКода = 55 ИЛИ ДлиннаКода = 41 Тогда // Код маркировки потребительской упаковки, новые требования.
		Сдвиг = 0;
		Если ДлиннаКода = 55 Тогда
			Сдвиг = 3;
		ИначеЕсли ДлиннаКода = 41 Тогда
			Сдвиг = -11;
		КонецЕсли;
		ДанныеМаркировки.ТипКодаМаркировки = "Групповая";
		Если Лев(КодМаркировки, 2) = ИдентификаторGTIN Тогда 
			ДанныеМаркировки.ГлобальныйИдентификаторТорговойЕдиницы = Сред(КодМаркировки, 3, 14); // Код товара по товарной номенклатуре GS1.
			КодМаркировки = Прав(КодМаркировки, 36 + сдвиг);
			Если Лев(КодМаркировки, 2) = ИдентификаторСерийныйНомер Тогда 
				ДанныеМаркировки.СерийныйНомер = Сред(КодМаркировки, 3, 7); // Код идентификации упаковки табачной продукции.
				КодМаркировки = Прав(КодМаркировки, 27 + сдвиг);
				Если Лев(КодМаркировки, 2) = ИдентификаторКлючаПроверки Тогда 
					ДанныеМаркировки.ИдентификаторКлючаПроверки = Сред(КодМаркировки, 3, 4); // Идентификатор ключа проверки.
					КодМаркировки = Прав(КодМаркировки, 21 + сдвиг);
					Если Лев(КодМаркировки, 2) = ИдентификаторКодаПроверки Тогда 
						ДанныеМаркировки.КодПроверки = Сред(КодМаркировки, 3, 8);
						//+БПО3.2
						МРЦ = Лев(ДанныеМаркировки.КодПроверки,4);
						ДанныеМаркировки.МРЦ = ПолучитьМРЦ(МРЦ);
						Если ДанныеМаркировки.МРЦ > 0 Тогда
							ДанныеМаркировки.СерийныйНомер = ДанныеМаркировки.СерийныйНомер + МРЦ;
						КонецЕсли;
						//-БПО3.2
						ДанныеМаркировки.Расшифрован = Истина;
						КодМаркировки = Прав(КодМаркировки, 11 + сдвиг);
						Если Лев(КодМаркировки, 3) = ИдентификаторДопИдентификатор Тогда 
							ДанныеМаркировки.ДополнительныйИдентификаторПродукта =  Сред(КодМаркировки, 4);
						КонецЕсли;
					КонецЕсли;
				ИначеЕсли Лев(КодМаркировки, 4) = ИдентификаторМРЦ Тогда
					Попытка
						ДанныеМаркировки.МРЦ = Число(Сред(КодМаркировки,5,6))/100;
					Исключение
						ДанныеМаркировки.МРЦ = 0;
					КонецПопытки;
					КодМаркировки = Прав(КодМаркировки, 17 + сдвиг);
					Если Лев(КодМаркировки, 2) = ИдентификаторКодПроверкиНовый Тогда 
						ДанныеМаркировки.КодПроверки = Сред(КодМаркировки, 3, 8);
						ДанныеМаркировки.Расшифрован = Истина;
					КонецЕсли;
				Иначе
					ДанныеМаркировки.МРЦ = 0;
					ДанныеМаркировки.Расшифрован = Истина;
					ДанныеМаркировки.НестандартнаяДлинаКода = Истина;// Серийный номер может быть больше, ШК другой длины и тд
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ДлиннаКода = 30 Тогда // Молочная продукция
		ДанныеМаркировки.ТипКодаМаркировки = "Потребительская";
		ДанныеМаркировки.ГлобальныйИдентификаторТорговойЕдиницы = Сред(КодМаркировки, 3, 14); // Код товара по товарной номенклатуре GS1
		ДанныеМаркировки.СерийныйНомер = Сред(КодМаркировки, 19, 6); // Серийный номер упаковки молочной продукции
		ДанныеМаркировки.КодПроверки = Прав(КодМаркировки, 4); // Код проверки
		ДанныеМаркировки.Расшифрован = Истина;
	ИначеЕсли ДлиннаКода = 32 Тогда // Молочная продукция Беларусь
		ДанныеМаркировки.ТипКодаМаркировки = "Потребительская";
		ДанныеМаркировки.ГлобальныйИдентификаторТорговойЕдиницы = Сред(КодМаркировки, 3, 14); // Код товара по товарной номенклатуре GS1
		ДанныеМаркировки.СерийныйНомер = Сред(КодМаркировки, 19, 8); // Серийный номер упаковки молочной продукции
		ДанныеМаркировки.КодПроверки = Прав(КодМаркировки, 4); // Код проверки
		ДанныеМаркировки.Расшифрован = Истина;
		
	ИначеЕсли ДлиннаКода = 21 Тогда // Код введен вручную с упаковки (если не читается)
		ДанныеМаркировки.ТипКодаМаркировки = "Потребительская";
		ДанныеМаркировки.ГлобальныйИдентификаторТорговойЕдиницы = Сред(КодМаркировки, 1, 14); // Код товара по товарной номенклатуре GS1
		ДанныеМаркировки.СерийныйНомер = Сред(КодМаркировки, 15); // Серийный номер
		ДанныеМаркировки.КодПроверки = "";
		ДанныеМаркировки.Расшифрован = Истина;
	ИначеЕсли ДлиннаКода = 25 И Лев(КодМаркировки, 2)="01" И Сред(КодМаркировки, 17, 2)="21" Тогда // Код введен вручную с упаковки (если не читается)
		ДанныеМаркировки.ТипКодаМаркировки = "Потребительская";
		ДанныеМаркировки.ГлобальныйИдентификаторТорговойЕдиницы = Сред(КодМаркировки, 3, 14); // Код товара по товарной номенклатуре GS1
		ДанныеМаркировки.СерийныйНомер = Сред(КодМаркировки, 19); // Серийный номер
		ДанныеМаркировки.КодПроверки = "";
		ДанныеМаркировки.Расшифрован = Истина;
	Иначе 
		// Попытка обработать нестандартный код коробов
		Если ДлиннаКода > 29 Тогда
			ВозможныйШтрихкод = СтроковыеФункцииКлиентСервер.УдалитьПовторяющиесяСимволы(Сред(КодМаркировки, 3, 14), "0");
			
			ДанныеУпаковки = ОбработкаДанныхГИСМТВызовСервера.ПолучитьДанныеУпаковкиПоШтрихкоду(ВозможныйШтрихкод);
			Если ДанныеУпаковки <> Неопределено Тогда
				ДанныеМаркировки.ТипКодаМаркировки = ?(ДанныеУпаковки.УпаковкаКоэффициент = 1, "Потребительская", "Групповая");
				ДанныеМаркировки.ГлобальныйИдентификаторТорговойЕдиницы = Сред(КодМаркировки, 3, 14); // Код товара по товарной номенклатуре GS1
				ДанныеМаркировки.СерийныйНомер = Сред(КодМаркировки, 19); // Возможный серийный номер
				ДанныеМаркировки.КодПроверки = "";
				ДанныеМаркировки.Расшифрован = Истина;
				ДанныеМаркировки.НестандартнаяДлинаКода = Истина;// Серийный номер может быть больше, ШК другой длины и тд
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	Если ДанныеМаркировки.Расшифрован Тогда
		// Пытаемся получить торговый штрихкод EAN8 или EAN13 из GTIN.
		GTIN = ДанныеМаркировки.ГлобальныйИдентификаторТорговойЕдиницы;
		Пока Лев(GTIN, 1) = "0" И СтрДлина(GTIN) > 8 Цикл
			GTIN = Сред(GTIN, 2);
		КонецЦикла;
		ДанныеМаркировки.ШтрихКод = GTIN;
	КонецЕсли;
	
	Возврат ДанныеМаркировки;
КонецФункции

Функция ПолучитьМРЦ(Код) Экспорт
	Цена = 0;
	Алфавит = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!"+Символ(34)+"%&'*+-./_,:;=<>?";
	Для НомерСимвола = 1 По 4 Цикл
		Степень = 4-НомерСимвола;
		Индекс = СтрНайти(Алфавит, Сред(Код,НомерСимвола,1))-1;
		Если Индекс = -1 Тогда
			Возврат -1;
		КонецЕсли;
		Цена = Цена + pow(80, степень)*Индекс;
	КонецЦикла;
	Если (Цена%100 > 0) ИЛИ (Цена > 50000) Тогда
		Возврат -1;
	Иначе
		Возврат Цена/100;
	КонецЕсли;
	
КонецФункции